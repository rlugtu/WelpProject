{"version":3,"sources":["components/Searchbar.jsx","components/Home.jsx","components/Navbar.jsx","components/SearchPage.jsx","components/ReviewForm.jsx","modules/Auth.js","components/ServicePage.jsx","components/SearchController.jsx","components/LoginForm.jsx","components/Login.jsx","components/RegisterForm.jsx","components/Register.jsx","components/UserProfile.jsx","components/ui/Theme.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","useState","fireRedirect","setFireRedirect","className","onSubmit","e","preventDefault","term","location","fetch","headers","Authorization","process","Origin","withCredentials","then","res","json","console","log","setResults","Input","name","color","onInput","setTerm","target","value","placeholder","setLocation","Button","type","variant","to","pathname","Home","isLoggedIn","onClick","logoutUser","src","alt","height","Searchbar","useStyles","makeStyles","theme","toolbarMargin","mixins","toolbar","input","WebkitBoxShadow","Navbar","redirect","setRedirect","classes","Fragment","AppBar","position","Toolbar","SearchPage","results","businesses","map","item","i","key","setServiceResult","id","image_url","width","categories","category","title","price","rating","is_closed","ReviewForm","userReviewSubmit","Rating","reviewRating","precision","onChange","setReviewRating","TextField","multiline","rows","reviewDescription","setReviewDescription","Auth","authenticateToken","token","sessionStorage","setItem","isUserAuthenticated","getItem","deauthenticateUser","removeItem","getToken","style","serviceButton","margin","ServicePage","serviceInfo","setServiceInfo","hasError","setHasError","servicePhotos","setServicePhotos","serviceName","setServiceName","serviceUrl","setServiceUrl","servicePrice","setServicePrice","serviceYelp_id","setServiceYelp_id","servicePicture","setServicePicture","serviceCity","setServiceCity","serviceCountry","setServiceCountry","serviceState","setServiceState","serviceZip_code","setServiceZip_code","serviceAddress","setServiceAddress","existingService","setExistingService","serviceReviews","setServiceReviews","activateReview","setActivateReview","serviceUniqueID","setServiceUniqueID","useEffect","serviceResult","photos","url","city","country","state","zip_code","address1","checkService","matchService","catch","err","saveService","getReviews","method","body","JSON","stringify","service","yelp_id","picture","address","services","display_phone","display_address","bookmark","service_id","review","description","reviewSubmit","autoPlay","autoPlayInterval","photo","hours","open","dayHour","day","start","end","SearchController","currentPage","setCurrentPage","push","decideWhichToRender","LoginForm","handleLoginSubmit","setUsername","username","setPassword","password","Login","RegisterForm","setName","about","setAbout","birthday","setBirthday","setState","setCity","setZipCode","email","setEmail","user","setAuth","Register","UserProfile","userInfo","reviews","created_at","createMuiTheme","palette","primary","main","orange","contrastText","secondary","grey","fontWeight","App","setIsLoggedIn","setUserInfo","getUserInfo","ThemeProvider","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c7bc0b7b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst SearchBar = (props) => {\n  // const [term, setTerm] = useState(\"\");\n  // const [location, setLocation] = useState(\"\");\n  // const [searchResults, setSearchResults] = useState(null);\n  const [fireRedirect, setFireRedirect] = useState(false);\n\n  const YELP_API_KEY = process.env.REACT_APP_YELP_KEY;\n  const yelpFetch = (term, location) => {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/api.yelp.com/v3/businesses/search?term=${props.term}&location=${props.location}`,\n      {\n        headers: {\n          Authorization: `Bearer ${YELP_API_KEY}`,\n          Origin: \"localhost\",\n          withCredentials: true,\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        // props.setSearchResults(res);\n        // setSearchResults(res);\n        // localStorage.setItem(\"searchResults\", JSON.stringify(res));\n        props.setResults(res);\n        // console.log(term, location);\n      })\n      .then(() => {\n        setFireRedirect(true);\n      });\n  };\n\n  const handleSearch = (term, location) => {\n    const data = { term: term, location: location };\n    return fetch(\"/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        // props.setSearchResults(res);\n        // setSearchResults(res);\n        // localStorage.setItem(\"searchResults\", JSON.stringify(res));\n        props.setResults(res);\n        // console.log(term, location);\n      });\n    // .then(() => {\n    //   setFireRedirect(true);\n    // });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    yelpFetch(props.term, props.location);\n    // handleSearch(props.term, props.location);\n    console.log(props.term, props.location);\n  };\n\n  return (\n    <div className=\"searchBarContainer\">\n      <form onSubmit={handleSubmit} className=\"searchBarForm\">\n        <Input\n          name=\"term\"\n          color=\"primary\"\n          onInput={(e) => props.setTerm(e.target.value)}\n          placeholder=\"Keyword\"\n          className=\"searchBarLeftInput\"\n          value={props.term}\n        />\n        <Input\n          name=\"location\"\n          placeholder=\"location\"\n          className=\"searchBarRightInput\"\n          onInput={(e) => props.setLocation(e.target.value)}\n          value={props.location}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"searchBarButton\"\n        >\n          <SearchIcon />\n        </Button>\n      </form>\n      {fireRedirect && (\n        <Redirect\n          to={{\n            pathname: \"/search/\" + props.term + \"&\" + props.location,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Searchbar from \"./Searchbar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Home = (props) => {\n  return (\n    <div className=\"homeContainer\">\n      <div className=\"homeNav\">\n        {props.isLoggedIn ? (\n          <div className=\"navLogButtons\">\n            <Button\n              variant=\"contained\"\n              className=\"loginButtons\"\n              color=\"primary\"\n            >\n              <Link to=\"/user\">Profile</Link>\n            </Button>\n            <Button\n              className=\"loginButtons\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => props.logoutUser()}\n            >\n              <Link to=\"/\">Logout</Link>\n            </Button>\n          </div>\n        ) : (\n          <div className=\"navLogButtons\">\n            {\" \"}\n            <Button\n              className=\"loginButtons\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Link to=\"/login\">Login</Link>\n            </Button>\n            <Button\n              className=\"loginButtons\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Link to=\"/register\">Register</Link>\n            </Button>\n          </div>\n        )}\n      </div>\n      <div className=\"homeLogo\">\n        <Link to=\"/\">\n          <img\n            src={\"https://i.imgur.com/AyuQkTz.png\"}\n            alt={\"company logo\"}\n            height=\"200px\"\n          />\n        </Link>\n      </div>\n      <div className=\"searchBarHome\">\n        <Searchbar\n          setResults={props.setResults}\n          setTerm={props.setTerm}\n          setLocation={props.setLocation}\n          term={props.term}\n          location={props.location}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Searchbar from \"./Searchbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n  },\n  input: {\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 1000px white inset\",\n    },\n  },\n}));\n\nconst Navbar = (props) => {\n  const [redirect, setRedirect] = useState(false);\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar className=\"navBar\" color=\"secondary\">\n          <img\n            src={\"https://i.imgur.com/AyuQkTz.png\"}\n            alt=\"company logo\"\n            height=\"75px\"\n            className=\"navLogo\"\n            onClick={() => setRedirect(true)}\n          />\n          <Searchbar\n            setResults={props.setResults}\n            setTerm={props.setTerm}\n            setLocation={props.setLocation}\n            term={props.term}\n            location={props.location}\n          />\n          {props.isLoggedIn ? (\n            <div className=\"navLogButtons\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"loginButtons\"\n              >\n                <Link to=\"/user\">Profile</Link>\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"loginButtons\"\n                onClick={() => props.logoutUser()}\n              >\n                <Link to=\"/\">Logout</Link>\n              </Button>\n            </div>\n          ) : (\n            <div className=\"navLogButtons\">\n              {\" \"}\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"loginButtons\"\n              >\n                <Link to=\"/login\">Login</Link>\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"loginButtons\"\n              >\n                <Link to=\"/register\">Register</Link>\n              </Button>\n            </div>\n          )}\n        </Toolbar>\n        {/* isLoggedIn ={isLoggedIn} */}\n\n        <div></div>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n      {redirect && <Redirect to=\"/\" />}\n    </React.Fragment>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst SearchPage = (props) => {\n  //   let resultsRaw = localStorage.getItem(\"searchResults\");\n  //   let result = JSON.parse(resultsRaw);\n  //   const [results, setResults] = useState(result);\n\n  //   setResults(result);\n  //   console.log(results);\n  return (\n    <div className=\"searchResultsContainer\">\n      {props.results ? (\n        props.results.businesses.map((item, i) => (\n          <Link\n            to={`/services/${item.name}`}\n            key={i}\n            onClick={() => {\n              props.setServiceResult(item.id);\n            }}\n          >\n            <div className=\"servicesSearchContainer\">\n              <div className=\"serviceSearchDiv\">\n                <div className=\"serviceSearchPic\">\n                  {\" \"}\n                  <img\n                    src={item.image_url}\n                    className=\"searchServiceImage\"\n                    height=\"200px\"\n                    width=\"250px\"\n                    alt={\"service logo\"}\n                  />\n                </div>\n                <div className=\"serviceSearchInfo\">\n                  <li>\n                    <h1>{item.name}</h1>\n                  </li>\n                  <li>\n                    {item.categories.map((category, i) => (\n                      <div className=\"serviceSearchCategories\" key={i}>\n                        <p>{category.title}</p>\n                      </div>\n                    ))}\n                  </li>\n                  <li>{item.price}</li>\n                  <li>{item.rating}</li>\n                  <li>{item.is_closed}</li>\n                </div>\n              </div>\n              <div className=\"serviceUserOptions\">block</div>\n            </div>\n          </Link>\n        ))\n      ) : (\n        <p>Invalid Location Please Try Again</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { Rating } from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ReviewForm = (props) => {\n  return (\n    <div className=\"reviewFormContainer\">\n      <form onSubmit={props.userReviewSubmit} className=\"reviewForm\">\n        <h2 className=\"reviewHeader\">What do you think?</h2>\n        <h4>Rating</h4>\n        <Rating\n          name=\"reviewRating\"\n          value={props.reviewRating}\n          precision={0.5}\n          onChange={(e) => props.setReviewRating(e.target.value)}\n        />\n        <h4>Description</h4>\n        <TextField\n          //   id=\"standard-multiline-flexible\"\n          multiline\n          rows=\"4\"\n          variant=\"outlined\"\n          className=\"reviewTextBox\"\n          value={props.reviewDescription}\n          onChange={(e) => props.setReviewDescription(e.target.value)}\n          //   margin=\"normal\"\n        />\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ReviewForm;\n","const Auth = {\n  authenticateToken(token) {\n    sessionStorage.setItem(\"token\", token);\n  },\n  isUserAuthenticated() {\n    return sessionStorage.getItem(\"token\") !== null;\n  },\n  deauthenticateUser() {\n    sessionStorage.removeItem(\"token\");\n  },\n  getToken() {\n    return sessionStorage.getItem(\"token\");\n  },\n};\n\nexport default Auth;\n","import React, { useState, useEffect } from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\n\nimport ServiceReviews from \"./ServiceReviews\";\nimport ReviewForm from \"./ReviewForm\";\n\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport Carousel from \"react-elastic-carousel\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Auth from \"../modules/Auth\";\n\nconst style = makeStyles({\n  serviceButton: {\n    margin: 5,\n  },\n});\nconst ServicePage = (props) => {\n  const classes = style();\n\n  const [serviceInfo, setServiceInfo] = useState(null);\n  const [hasError, setHasError] = useState(null);\n  const [servicePhotos, setServicePhotos] = useState(null);\n  const YELP_API_KEY = process.env.REACT_APP_YELP_KEY;\n\n  // services states\n  const [serviceName, setServiceName] = useState(null);\n  const [serviceUrl, setServiceUrl] = useState(null);\n  const [servicePrice, setServicePrice] = useState(null);\n  const [serviceYelp_id, setServiceYelp_id] = useState(null);\n  const [servicePicture, setServicePicture] = useState(null);\n  const [serviceCity, setServiceCity] = useState(null);\n  const [serviceCountry, setServiceCountry] = useState(null);\n  const [serviceState, setServiceState] = useState(null);\n  const [serviceZip_code, setServiceZip_code] = useState(null);\n  const [serviceAddress, setServiceAddress] = useState(null);\n  // DB SERVICES && Reviews\n  const [existingService, setExistingService] = useState(null);\n  const [serviceReviews, setServiceReviews] = useState(null);\n\n  // user review\n  const [activateReview, setActivateReview] = useState(false);\n  const [reviewRating, setReviewRating] = useState(\"\");\n  const [reviewDescription, setReviewDescription] = useState(\"\");\n\n  // db id\n  const [serviceUniqueID, setServiceUniqueID] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      `https://cors-anywhere.herokuapp.com/api.yelp.com/v3/businesses/${props.serviceResult}`,\n      {\n        headers: {\n          Authorization: `Bearer ${YELP_API_KEY}`,\n          Origin: \"localhost\",\n          withCredentials: true,\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setServiceInfo(res);\n        setServicePhotos(res.photos);\n        setServiceName(res.name);\n        setServiceUrl(res.url);\n        setServicePrice(res.price);\n        setServiceYelp_id(res.id);\n        setServicePicture(res.image_url);\n        setServiceCity(res.location.city);\n        setServiceCountry(res.location.country);\n        setServiceState(res.location.state);\n        setServiceZip_code(res.location.zip_code);\n        setServiceAddress(res.location.address1);\n      })\n      .then(() => {\n        checkService();\n      })\n      .then(() => {\n        matchService();\n      })\n      .catch((err) => {\n        setHasError(err);\n        console.log(hasError);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"existing service updated\", existingService);\n    matchService();\n  }, [existingService]);\n  useEffect(() => {\n    saveService();\n  }, [serviceName]);\n  // check for reviews\n  useEffect(() => {\n    console.log(serviceUniqueID);\n    getReviews();\n  }, [serviceUniqueID]);\n  // SAVES SERVICE TO DB\n  const saveService = () => {\n    fetch(\"/services\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        service: {\n          name: serviceName,\n          url: serviceUrl,\n          yelp_id: serviceYelp_id,\n          price: servicePrice,\n          picture: servicePicture,\n          city: serviceCity,\n          country: serviceCountry,\n          state: serviceState,\n          zip_code: serviceZip_code,\n          address: serviceAddress,\n        },\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        checkService();\n        // console.log(res);\n        // console.log(\"done\");\n        // if (res.service.id) {\n        //   setServiceUniqueID(res.service.id);\n        // } else {\n        matchService();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // CHECKS DATABASE FOR ALL SERVICES\n  const checkService = () => {\n    // console.log(existingService);\n    fetch(\"/services\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(\"checkService done\");\n        // console.log(res);\n        setExistingService(res);\n        // console.log(existingService);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const matchService = () => {\n    if (existingService) {\n      existingService.services.map((service, i) => {\n        // console.log(service.yelp_id, serviceYelp_id);\n        if (service.yelp_id === serviceYelp_id) {\n          console.log(\"its a match\");\n          setServiceUniqueID(service.id);\n          // console.log(serviceUniqueID);\n        }\n      });\n    }\n  };\n\n  // BOOKMARKING && REVIEW FUNCTON\n  const userBookmarkService = () => {\n    saveService();\n    fetch(\"/bookmarks\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        bookmark: {\n          service_id: serviceUniqueID,\n        },\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const reviewSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/reviews\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        review: {\n          name: serviceName,\n          service_id: serviceUniqueID,\n          rating: reviewRating,\n          description: reviewDescription,\n          yelp_id: serviceYelp_id,\n        },\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(res);\n        setReviewRating(\"\");\n        setReviewDescription(\"\");\n        getReviews();\n        setActivateReview(!activateReview);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // GET REVIEWS FROM SERVICE\n  const getReviews = () => {\n    fetch(`/service/reviews/${serviceUniqueID}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(\"reviews\", res);\n        setServiceReviews(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const activateReviewBox = () => {\n    saveService();\n    setActivateReview(!activateReview);\n  };\n  const userReviewSubmit = (e) => {\n    reviewSubmit(e);\n  };\n\n  return (\n    <div className=\"serviceContainer\">\n      {serviceInfo ? (\n        <div className=\"serviceContent\">\n          <div className=\"serviceLeftContainer\">\n            <h1 className=\"serviceName\">{serviceInfo.name}</h1>\n            <div className=\"serviceCategories\">\n              {serviceInfo.categories &&\n                serviceInfo.categories.map((category, i) => (\n                  <p key={i}>{category.title}</p>\n                ))}\n            </div>\n            <p>{serviceInfo.price}</p>\n            <p>{serviceInfo.is_closed}</p>\n            <p>{serviceInfo.display_phone}</p>\n            <p>{serviceInfo.location.display_address[0]}</p>\n            <p>{serviceInfo.location.display_address[1]}</p>\n            <div className=\"serviceButtonContainer\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"servicePageButtons\"\n                className={classes.serviceButton}\n                onClick={() => userBookmarkService()}\n              >\n                Bookmark\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.serviceButton}\n                onClick={() => activateReviewBox()}\n              >\n                Write a Review\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.serviceButton}\n              >\n                Share\n              </Button>\n            </div>\n\n            {activateReview && (\n              <ReviewForm\n                setReviewRating={setReviewRating}\n                setReviewDescription={setReviewDescription}\n                userReviewSubmit={userReviewSubmit}\n              />\n            )}\n            {serviceReviews ? (\n              <div className=\"reviewsContainer\">\n                <h2>Reviews</h2>\n                {serviceReviews.review.map((review, i) => (\n                  <div key={i} className=\"individualReviews\">\n                    <p>{review.rating}</p>\n                    <p>{review.description}</p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No Reviews Yet</p>\n            )}\n          </div>\n          <div className=\"serviceRightContainer\">\n            {servicePhotos ? (\n              <div className=\"servicePhotoCarousel\">\n                <AliceCarousel autoPlay={true} autoPlayInterval={2000}>\n                  {servicePhotos.map((photo, i) => (\n                    <img\n                      className=\"foodCarouselPhoto\"\n                      src={photo}\n                      alt=\"food pictures\"\n                      key={i}\n                    />\n                  ))}\n                </AliceCarousel>\n              </div>\n            ) : (\n              <p>loading photos...</p>\n            )}\n            <div className=\"serviceHours\">\n              <h1>Hours</h1>\n              {serviceInfo.hours ? (\n                serviceInfo.hours[0].open.map((dayHour, i) => (\n                  <p key={i}>\n                    {dayHour.day}: {dayHour.start} - {dayHour.end}\n                  </p>\n                ))\n              ) : (\n                <p>no hours available</p>\n              )}\n\n              {/* {serviceInfo.hours.open.map((day, i) => (\n              <p key={i}>\n                {day.day}: {day.start} - {day.end}\n              </p>\n            ))} */}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <p>loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ServicePage;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./Navbar\";\nimport SearchPage from \"./SearchPage\";\nimport ServicePage from \"./ServicePage\";\n\nconst SearchController = (props) => {\n  const [currentPage, setCurrentPage] = useState(props.currentPage);\n  // const [fireRedirect, setFireRedirect] = useState(false);\n\n  // const [results, setResults] = useState(null);\n\n  // let getResults = () => {\n  //   let resultsRaw = localStorage.getItem(\"searchResults\");\n  //   let results = JSON.parse(resultsRaw);\n  //   setResults(results);\n  // };\n\n  // useEffect(() => {\n\n  // },[searchResults])\n  let decideWhichToRender = () => {\n    switch (currentPage) {\n      case \"search\":\n        return (\n          <SearchPage\n            setCurrentPage={setCurrentPage}\n            results={props.results}\n            setServiceResult={props.setServiceResult}\n          />\n        );\n      case \"service\":\n        return (\n          <ServicePage\n            setCurrentPage={setCurrentPage}\n            serviceResult={props.serviceResult}\n            setServiceResult={props.setServiceResult}\n          />\n        );\n      default:\n        return <Redirect push to=\"/\" />;\n    }\n  };\n  return (\n    <div className=\"searchControllerContainer\">\n      <Navbar\n        setResults={props.setResults}\n        isLoggedIn={props.isLoggedIn}\n        logoutUser={props.logoutUser}\n        setTerm={props.setTerm}\n        setLocation={props.setLocation}\n        term={props.term}\n        location={props.location}\n      />\n      {decideWhichToRender()}\n    </div>\n  );\n};\n\nexport default SearchController;\n","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\n\nconst LoginForm = (props) => {\n  return (\n    <div className=\"loginContainer\">\n      <form onSubmit={props.handleLoginSubmit} className=\"loginForm\">\n        <Input\n          name=\"username\"\n          color=\"primary\"\n          onInput={(e) => props.setUsername(e.target.value)}\n          placeholder=\"username\"\n          className=\"usernameInput\"\n          value={props.username}\n        />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          className=\"passwordInput\"\n          onInput={(e) => props.setPassword(e.target.value)}\n          value={props.password}\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          <AccountBoxIcon className=\"loginButton\" />\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport { Link } from \"react-router-dom\";\nconst Login = (props) => {\n  return (\n    <div className=\"homeContainer\">\n      <div className=\"homeLogo\">\n        <Link to=\"/\">\n          <img\n            src={\"https://i.imgur.com/AyuQkTz.png\"}\n            alt={\"company logo\"}\n            height=\"200px\"\n          />\n        </Link>\n\n        <LoginForm\n          username={props.username}\n          password={props.password}\n          setUsername={props.setUsername}\n          setPassword={props.setPassword}\n          handleLoginSubmit={props.handleLoginSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport Auth from \"../modules/Auth\";\n\nconst RegisterForm = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [about, setAbout] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [zip_code, setZipCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fireRedirect, setFireRedirect] = useState(false);\n\n  const handleRegisterSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/users\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password,\n          email: email,\n          name: name,\n          about: about,\n          birthday: birthday,\n          state: state,\n          city: city,\n          zip_code: zip_code,\n        },\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.token) {\n          Auth.authenticateToken(res.token);\n          props.setAuth(Auth.isUserAuthenticated());\n          setUsername(\"\");\n          setPassword(\"\");\n          setFireRedirect(true);\n          props.isLoggedIn(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"registerContainer\">\n      {fireRedirect && <Redirect to=\"/user\" />}\n      <form onSubmit={handleRegisterSubmit} className=\"registerForm\">\n        <h1>Register</h1>\n        <Input\n          name=\"name\"\n          color=\"primary\"\n          onInput={(e) => setName(e.target.value)}\n          placeholder=\"Name\"\n          className=\"usernameInput\"\n          value={name}\n        />\n        <Input\n          name=\"username\"\n          type=\"date\"\n          color=\"primary\"\n          onInput={(e) => setBirthday(e.target.value)}\n          placeholder=\"Birthday\"\n          className=\"usernameInput\"\n          value={birthday}\n        />\n        <Input\n          name=\"email\"\n          color=\"primary\"\n          onInput={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          className=\"usernameInput\"\n          value={email}\n        />\n        <Input\n          name=\"state\"\n          color=\"primary\"\n          onInput={(e) => setState(e.target.value)}\n          placeholder=\"state\"\n          className=\"usernameInput\"\n          value={state}\n        />\n        <Input\n          name=\"city\"\n          color=\"primary\"\n          onInput={(e) => setCity(e.target.value)}\n          placeholder=\"City\"\n          className=\"usernameInput\"\n          value={city}\n        />\n        <Input\n          name=\"zip_code\"\n          color=\"primary\"\n          onInput={(e) => setZipCode(e.target.value)}\n          placeholder=\"Zipcode\"\n          className=\"usernameInput\"\n          value={zip_code}\n        />\n        <Input\n          name=\"about\"\n          placeholder=\"About Me\"\n          className=\"usernameInput\"\n          onInput={(e) => setAbout(e.target.value)}\n          value={about}\n        />\n        <Input\n          name=\"username\"\n          placeholder=\"Username\"\n          className=\"usernameInput\"\n          onInput={(e) => setUsername(e.target.value)}\n          value={username}\n        />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"passwordInput\"\n          onInput={(e) => setPassword(e.target.value)}\n          value={password}\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Sign Up\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport RegisterForm from \"./RegisterForm\";\nimport { Link } from \"react-router-dom\";\nconst Register = (props) => {\n  return (\n    <div className=\"homeContainer\">\n      <div className=\"homeLogo\">\n        <Link to=\"/\">\n          <img\n            src={\"https://i.imgur.com/AyuQkTz.png\"}\n            alt={\"company logo\"}\n            height=\"200px\"\n          />\n        </Link>\n\n        <RegisterForm\n          setAuth={props.setAuth}\n          isLoggedIn={props.isLoggedIn}\n          //   username={props.username}\n          //   password={props.password}\n          //   setUsername={props.setUsername}\n          //   setPassword={props.setPassword}\n          //   handleLoginSubmit={props.handleLoginSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nconst UserProfile = (props) => {\n  // const [userInfo, setUserInfo] = useState(null);\n  return (\n    <div>\n      <Navbar\n        setResults={props.setResults}\n        isLoggedIn={props.isLoggedIn}\n        logoutUser={props.logoutUser}\n        setTerm={props.setTerm}\n        setLocation={props.setLocation}\n        term={props.term}\n        location={props.location}\n      />\n\n      {props.userInfo && (\n        <div>\n          <div className=\"userInfoContainer\">\n            <h1>{props.userInfo.user.name}</h1>\n            <p>{props.userInfo.user.about}</p>\n            <p>{props.userInfo.user.city}</p>\n            <p>{props.userInfo.user.state}</p>\n            <p>{props.userInfo.user.zip_code}</p>\n          </div>\n          <div className=\"reviewsContainer\">\n            {props.userInfo.reviews &&\n              props.userInfo.reviews.map((review, i) => (\n                <div key={i} className=\"individualReviewContainer\">\n                  <p>{review.description}</p>\n                  <p>{review.created_at}</p>\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport grey from \"@material-ui/core/colors/grey\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: orange[500],\n      contrastText: \"#fff\", //button text white instead of black\n    },\n  },\n  secondary: {\n    main: grey[500],\n  },\n  input: {\n    fontWeight: 500,\n    color: orange[500],\n  },\n});\n\nexport default theme;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport SearchController from \"./components/SearchController\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport UserProfile from \"./components/UserProfile\";\nimport Auth from \"./modules/Auth\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./components/ui/Theme\";\n\nfunction App() {\n  // total search results\n  const [term, setTerm] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const [results, setResults] = useState(null);\n  // Individual service results\n  const [serviceResult, setServiceResult] = useState(null);\n\n  // login check + user info\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [auth, setAuth] = useState(Auth.isUserAuthenticated());\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        if (res.token) {\n          Auth.authenticateToken(res.token);\n          setAuth(Auth.isUserAuthenticated());\n          setUsername(\"\");\n          setPassword(\"\");\n          setIsLoggedIn(true);\n          // console.log(Auth);\n        }\n      })\n      .then(() => {\n        getUserInfo();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getUserInfo = (e) => {\n    console.log(\"hi\");\n    fetch(\"/profile\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setUserInfo(res);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const logoutUser = () => {\n    fetch(\"/logout\", {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${Auth.getToken()}`,\n        token: Auth.getToken(),\n      },\n    }).then((res) => {\n      Auth.deauthenticateUser();\n      setAuth(Auth.isUserAuthenticated());\n      setUsername(\"\");\n      setPassword(\"\");\n      setIsLoggedIn(false);\n    });\n  };\n\n  const handleInputChange = () => {};\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Home\n              setResults={setResults}\n              isLoggedIn={isLoggedIn}\n              logoutUser={logoutUser}\n              setTerm={setTerm}\n              setLocation={setLocation}\n              term={term}\n              location={location}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/register\"\n          render={() => <Register setAuth={setAuth} isLoggedIn={isLoggedIn} />}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => (\n            <Login\n              username={username}\n              password={password}\n              setUsername={setUsername}\n              setPassword={setPassword}\n              handleLoginSubmit={handleLoginSubmit}\n            />\n          )}\n        />\n        {isLoggedIn && <Redirect to=\"/user\" />}\n        <Route\n          exact\n          path=\"/user\"\n          render={() => (\n            <UserProfile\n              getUserInfo={getUserInfo}\n              userInfo={userInfo}\n              setResults={setResults}\n              isLoggedIn={isLoggedIn}\n              logoutUser={logoutUser}\n              setTerm={setTerm}\n              setLocation={setLocation}\n              term={term}\n              location={location}\n            />\n          )}\n        />\n\n        <Route\n          exact\n          path=\"/search/:id\"\n          render={() => (\n            <SearchController\n              currentPage=\"search\"\n              setResults={setResults}\n              setServiceResult={setServiceResult}\n              results={results}\n              isLoggedIn={isLoggedIn}\n              logoutUser={logoutUser}\n              setTerm={setTerm}\n              setLocation={setLocation}\n              term={term}\n              location={location}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/services/:id\"\n          render={() => (\n            <SearchController\n              currentPage=\"service\"\n              serviceResult={serviceResult}\n              setResults={setResults}\n              isLoggedIn={isLoggedIn}\n              logoutUser={logoutUser}\n              setTerm={setTerm}\n              setLocation={setLocation}\n              term={term}\n              location={location}\n            />\n          )}\n        />\n\n        {/* <Link to=\"/profile\">Profile</Link> */}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}